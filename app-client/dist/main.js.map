{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.less","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/games/games-list/games-list.component.html","webpack:///./src/app/games/games-list/games-list.component.less","webpack:///./src/app/games/games-list/games-list.component.ts","webpack:///./src/app/games/games.module.ts","webpack:///./src/app/games/user/user.component.html","webpack:///./src/app/games/user/user.component.less","webpack:///./src/app/games/user/user.component.ts","webpack:///./src/app/news/news.component.html","webpack:///./src/app/news/news.component.less","webpack:///./src/app/news/news.component.ts","webpack:///./src/app/services/broadcast.service.ts","webpack:///./src/app/services/game.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/app/services/http.user.service.ts","webpack:///./src/app/services/news.ts","webpack:///./src/app/services/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {GamesListComponent} from \"./games/games-list/games-list.component\";\nimport {UserComponent} from \"./games/user/user.component\";\nimport {ContactsComponent} from \"./contacts/contacts.component\";\nimport {NewsComponent} from \"./news/news.component\";\n\nconst routes: Routes = [\n    {path:\"\", redirectTo:\"news\", pathMatch:\"full\"},\n    {path:\"news\", component:NewsComponent},\n    {path:\"games\", component:GamesListComponent},\n    {path:\"contacts\", component:ContactsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"header\\\">\\n\\n    <div class=\\\"top\\\">\\n        <nav class=\\\"container navbar navbar-expand-lg navbar-light bg-light\\\">\\n            <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"></a>\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n            <div class=\\\"menu collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n                <ul class=\\\"navbar-nav\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/news\\\" routerLinkActive=\\\"active\\\">News</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/games\\\" routerLinkActive=\\\"active\\\">Buy pro</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/contacts\\\" routerLinkActive=\\\"active\\\">Contact</a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </nav>\\n    </div>\\n</div>\\n\\n<article>\\n    <router-outlet></router-outlet>\\n</article>\\n\\n<footer>\\n    <div class=\\\"container\\\">\\n        <p>Copyright © 2018 heroku-board-games.herokuapp.com</p>\\n    </div>\\n</footer>\\n\\n\"","module.exports = \"footer p {\\n  margin-top: calc(100vh + 10px);\\n  padding: 10px;\\n  margin: 20px 0 0 0;\\n  font-size: 80%;\\n}\\nbutton {\\n  box-shadow: none !important;\\n}\\n.header {\\n  margin: 0;\\n  padding: 0;\\n  background-color: #17a2b8;\\n  border-top: 1px solid #17a2b8;\\n}\\n.header .top {\\n  width: 100%;\\n  margin-top: 10px;\\n  background-color: #ffffff;\\n}\\n.header .top:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.header .top .navbar {\\n  padding-top: 0;\\n  padding-bottom: 0;\\n  background-color: white !important;\\n  position: relative;\\n}\\n.header .top .navbar .logo {\\n  width: 250px;\\n  height: 84px;\\n  margin: 0;\\n  padding: 0;\\n  background: url(\\\"logo.png\\\") no-repeat top center scroll;\\n  background-size: cover;\\n}\\n.header .top .navbar .menu {\\n  position: absolute;\\n  bottom: 0;\\n  right: 10px;\\n}\\n.header .top .navbar .menu ul li {\\n  padding-left: 20px;\\n}\\n.header .top .navbar .menu ul li a {\\n  text-transform: uppercase;\\n  color: #666666;\\n}\\n.header .top .navbar .menu ul li a:hover {\\n  color: #17a2b8;\\n}\\n.header .top .navbar .menu ul li a:active {\\n  color: #17a2b8 !important;\\n}\\n/*rules*/\\n@media screen and (max-width: 992px) {\\n  .menu {\\n    position: static !important;\\n  }\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from \"@angular/http\";\n\nimport {HttpService} from \"./services/http.service\";\nimport {HttpUserService} from \"./services/http.user.service\";\n\nimport {GamesModule} from \"./games/games.module\";\nimport {AppRoutingModule} from './app-routing.module';\n\nimport {AppComponent} from './app.component';\nimport {ContactsComponent} from './contacts/contacts.component';\nimport {NewsComponent} from './news/news.component';\nimport {BroadcastService} from \"./services/broadcast.service\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ContactsComponent,\n        NewsComponent\n    ],\n    imports: [\n        BrowserModule,\n        GamesModule,\n        AppRoutingModule,\n        HttpModule\n    ],\n    providers: [HttpService, HttpUserService, BroadcastService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <hr>\\n  <div class=\\\"contacts\\\">\\n  <div class=\\\"map col-md-8\\\">\\n\\n  </div>\\n\\n  <div class=\\\"contact col-md-4\\\">\\n    <h2>Contact us</h2>\\n\\n    <div class=\\\"tel\\\">\\n      <p>093 172 24 01</p>\\n      <p>097 019 56 73</p>\\n    </div>\\n\\n    <div>\\n      <p><i class=\\\"material-icons\\\">email</i> board_game@gmail.com</p>\\n    </div>\\n\\n    <div>\\n      <h5>Our address</h5>\\n      <p>Dnepr, str. Rabochaya, 14</p>\\n      <p>(entrance from the yard)</p>\\n    </div>\\n\\n    <div>\\n      <h5>Schedule of our shop</h5>\\n      <p>Monday - Thursday: 10:00 - 21:00</p>\\n      <p>Friday - Sunday: 10:00 - 22:00</p>\\n    </div>\\n\\n    <div>\\n      <h5>Phones</h5>\\n      <p>+38 (093) 172 24 01 - Life </p>\\n      <p>+38 (097) 019 56 73 - Kyivstar</p>\\n    </div>\\n  </div>\\n</div>\\n</div>\"","module.exports = \".contacts {\\n  margin-top: 30px;\\n}\\n.contacts:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.contacts .map {\\n  width: 100%;\\n  height: 600px;\\n  background: url('map.jpg') no-repeat top center scroll;\\n  background-size: cover;\\n  float: right;\\n}\\n.contacts .contact {\\n  padding-top: 30px;\\n  float: left;\\n}\\n.contacts .contact h2 {\\n  font-weight: bold;\\n  color: #666666;\\n}\\n.contacts .contact div {\\n  margin-top: 30px;\\n}\\n.contacts .contact div h5 {\\n  color: #666666;\\n  font-weight: bold;\\n}\\nhr {\\n  margin: 0;\\n  height: 10px;\\n  background-color: #17a2b8;\\n}\\n/*rules*/\\n@media screen and (max-width: 992px) {\\n  .menu {\\n    position: static !important;\\n  }\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-contacts',\n    templateUrl: 'contacts.component.html',\n    styleUrls: ['contacts.component.less']\n})\nexport class ContactsComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<div class = \\\"search\\\">\\n    <div class=\\\"container\\\">\\n        <form>\\n            <input type=\\\"text\\\" placeholder=\\\"search game\\\" [(ngModel)]=\\\"search\\\" name = \\\"name\\\" #name = \\\"ngModel\\\" (keyup) = \\\"getGames()\\\">\\n            <button (click) = \\\"getGames()\\\">\\n                <i class=\\\"material-icons\\\">\\n                    search\\n                </i>\\n            </button>\\n        </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row  position-relative\\\">\\n        <app-user (userEvent)=\\\"receiveUser($event)\\\"></app-user>\\n        <div class=\\\"games col-8 col-lg-9\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"item col-lg-6\\\" *ngFor=\\\"let item of games\\\">\\n                    <!--this part of code not for edit-->\\n                    <div *ngIf=\\\"!item.edit\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"./assets/img/{{item.img}}\\\" alt=\\\"\\\" class=\\\"rounded mx-auto d-block\\\">\\n                        </div>\\n                        <div class=\\\"info\\\">\\n                            <h4 class=\\\"title\\\">{{item.title}}</h4>\\n                            <p class=\\\"description\\\">This interesting game will help you have fun in any party...\\n                                <a class=\\\"btn btn-link\\\"data-toggle=\\\"collapse\\\" href=\\\"#collapse{{item.index}}\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\n                                    more\\n                                </a>\\n                            </p>\\n                            <div class=\\\"collapse\\\" id=\\\"collapse{{item.index}}\\\">\\n                                <div class=\\\"card card-body\\\">{{item.description}}</div>\\n                            </div>\\n                            <div class=\\\"price\\\">Price:\\n                                <span>${{item.price}}</span>\\n                                <button class=\\\"add btn btn-info btn-sm\\\" *ngIf=\\\"correntUser.role\\\" (click)=\\\"addToCart(item)\\\">\\n                                    <i class=\\\"material-icons\\\">add_shopping_cart</i>\\n                                </button>\\n                            </div>\\n\\n                            <div class=\\\"admin-panel\\\" *ngIf=\\\"correntUser.role=='Administrator'\\\">\\n                                <span>Admin options:</span>\\n                                <button class=\\\"delete btn btn-info btn-sm\\\" (click)=\\\"deleteGame(item._id)\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </button>\\n                                <button class=\\\"edit btn btn-info btn-sm\\\" (click)=\\\"editGame(item)\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <!--this part of code for edit-->\\n                    <div *ngIf=\\\"item.edit\\\">\\n                        <form #editGameForm=\\\"ngForm\\\">\\n                            <div class=\\\"img\\\">\\n                            <img src=\\\"./assets/img/{{tmpGame.img}}\\\" alt=\\\"\\\" class=\\\"rounded mx-auto d-block\\\">\\n                        </div>\\n                            <div class=\\\"info\\\">\\n                                * <input type=\\\"text\\\" [(ngModel)]=\\\"tmpGame.title\\\" name = \\\"title\\\" maxlength=\\\"20\\\" minlength=\\\"3\\\" required >\\n                                <p class=\\\"description\\\">This interesting game will help you have fun in any party...\\n                                </p>\\n                                <textarea [(ngModel)]=\\\"tmpGame.description\\\" name = \\\"description\\\"></textarea>\\n\\n\\n                                <div class=\\\"price\\\">Price:\\n                                    <span>\\n                                        * <input type=\\\"text\\\" [(ngModel)]=\\\"tmpGame.price\\\" name = \\\"price\\\" pattern=\\\"^\\\\d*\\\\.?\\\\d{2}$\\\" required>\\n                                    </span>\\n                                </div>\\n\\n                                <div class=\\\"admin-panel\\\">\\n                                    <button class=\\\"delete btn btn-info btn-sm\\\" (click)=\\\"cancelEditGame(item.index)\\\">\\n                                        <i class=\\\"material-icons\\\">close</i>\\n                                    </button>\\n                                    <button class=\\\"edit btn btn-info btn-sm\\\" (click)=\\\"acceptEditGame()\\\" [disabled]=\\\"!editGameForm.form.valid\\\">\\n                                        <i class=\\\"material-icons\\\">check</i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n\\n                <!--this part of code for create-->\\n                <div *ngIf=\\\"correntUser.role=='Administrator'\\\" class=\\\"item col-lg-6\\\">\\n                    <form #createGameForm=\\\"ngForm\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"./assets/img/{{addGame.img}}\\\" alt=\\\"\\\" class=\\\"rounded mx-auto d-block\\\">\\n                        </div>\\n                        <div class=\\\"info\\\">\\n                            * <input type=\\\"text\\\" [(ngModel)]=\\\"addGame.title\\\" name = \\\"title\\\" placeholder=\\\"Add title...\\\" maxlength=\\\"20\\\" minlength=\\\"3\\\" required >\\n                            <p class=\\\"description\\\">This interesting game will help you have fun in any party...\\n                            </p>\\n\\n                            <textarea [(ngModel)]=\\\"addGame.description\\\" name = \\\"description\\\" placeholder=\\\"Add description...\\\"></textarea>\\n\\n                            <div class=\\\"price\\\">\\n                                <span>\\n                                    * <input type=\\\"text\\\" [(ngModel)]=\\\"addGame.price\\\" name = \\\"price\\\" placeholder=\\\"Add price...\\\" pattern=\\\"^\\\\d*\\\\.?\\\\d{2}$\\\" required>\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"admin-panel\\\">\\n                                <button class=\\\"delete btn btn-info btn-sm\\\" (click)=\\\"cancelAddGame()\\\">\\n                                    <i class=\\\"material-icons\\\">close</i>\\n                                </button>\\n                                <button class=\\\"edit btn btn-info btn-sm\\\" (click)=\\\"acceptAddGame(addGame)\\\" [disabled]=\\\"!createGameForm.form.valid\\\">\\n                                    <i class=\\\"material-icons\\\">check</i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".search {\\n  background-color: #17a2b8;\\n}\\n.search form {\\n  width: 100%;\\n  display: inline-block;\\n  margin: 10px auto;\\n  border-radius: 5px;\\n  background: white;\\n  padding: 0 10px 0 15px;\\n  line-height: 0;\\n}\\n.search form input,\\n.search form select,\\n.search form button {\\n  border: none;\\n  outline: inherit;\\n  background: none;\\n  font-size: 120%;\\n  padding: 5px;\\n}\\n.search form input {\\n  width: 90%;\\n  display: inline-table;\\n}\\n.search form select {\\n  border-right: 1px solid grey;\\n  border-left: 1px solid grey;\\n  color: grey;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n.search form button {\\n  float: right;\\n  padding: 0;\\n  cursor: pointer;\\n  color: #666666;\\n}\\n.search form button:active {\\n  color: #333333;\\n}\\n.search form button i {\\n  margin-top: 5px;\\n}\\n.games {\\n  margin: 10px 0;\\n  padding: 5px 2px 5px 15px;\\n}\\n.games .item {\\n  margin-right: 0px;\\n  border-radius: 5px;\\n  padding: 2px;\\n  border: 1px solid #17a2b8 !important;\\n}\\n.games .item:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.games .item .img {\\n  padding: 5px;\\n  float: left;\\n}\\n.games .item .info {\\n  width: 65%;\\n  float: left;\\n  padding: 5px;\\n}\\n.games .item .info input,\\n.games .item .info textarea {\\n  border: 1px solid #17a2b8 !important;\\n}\\n.games .item .info .price {\\n  margin-top: 15px;\\n}\\n.games .item .info .price:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.games .item .info .price span {\\n  font-weight: bold;\\n}\\n.games .item .info .price button {\\n  margin-top: -10px;\\n  padding-bottom: 0;\\n  float: right;\\n}\\n.games .item .info .admin-panel {\\n  margin-top: 10px;\\n  padding-top: 8px;\\n  border-radius: 5px;\\n}\\n.games .item .info .admin-panel:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.games .item .info .admin-panel button {\\n  margin: -8px 0 2px 5px;\\n  padding-bottom: 0;\\n  float: right;\\n}\\n.games .add-game {\\n  margin-top: 2px;\\n  padding: 15px 25px 5px 25px;\\n  border-radius: 5px;\\n  font-weight: bold;\\n  border: 1px solid #17a2b8 !important;\\n}\\n.games .add-game:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.games .add-game button {\\n  margin: -8px 0 2px 5px;\\n  padding-bottom: 0;\\n  float: right;\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import { Component, OnInit,  } from '@angular/core';\n\nimport {HttpService} from \"../../services/http.service\";\nimport {BroadcastService} from \"../../services/broadcast.service\";\nimport {Game} from \"../../services/game\";\nimport {User} from \"../../services/user\";\n\n@Component({\n  selector: 'app-games-list',\n  templateUrl: './games-list.component.html',\n  styleUrls: ['./games-list.component.less']\n})\nexport class GamesListComponent implements OnInit {\n\n    games: Game[];\n    tmpGame: Game = new Game(\"\", \"\", \"\", \"\", \"\", \"\", \"\");\n    errorMessage: string;\n    search: string = \"\";\n\n    constructor(private service: HttpService, private broadcastService: BroadcastService) {}\n\n    //for check current user and show more options\n    public correntUser:User;\n    receiveUser($event){\n        this.correntUser = $event;\n    }\n\n    ngOnInit() {\n        this.getGames();\n    }\n\n    //add chosen game to cart\n    private addToCart(item){\n        this.broadcastService.setResult(item);\n    }\n\n    //HTTP REQUESTS (get, post, update, delete)\n    //http get any game\n    private getGames() {\n        this.service.getGames(this.search).then(\n            games => {\n                this.games = games;\n            },\n            error => this.errorMessage = error\n        )\n    }\n\n    //http create new game\n    private createGame() {\n        this.service.createGame(this.addGame, this.correntUser.token).then(\n            games => {\n                this.games = games;\n                this.addGame = new Game(\"\", \"\", \"\", \"\", \"default.jpg\", \"\", \"\");\n            },\n            error => this.errorMessage = error\n        )\n    }\n\n    //http update game\n    private updateGame() {\n        this.service.updateGame(this.tmpGame, this.correntUser.token).then(\n            games => {\n                this.games = games;\n                this.games[this.tmpGame.index].edit=false;\n            },\n            error => this.errorMessage = error\n        )\n    }\n\n    //http delete game\n    private deleteGame(id) {\n        this.service.deleteGame(id, this.correntUser.token).then(\n            games => {\n                this.games = games;\n            },\n            error => this.errorMessage = error\n        )\n    }\n\n    //edit game into form\n    private editGame(item){\n        if(this.tmpGame.title) {\n            this.games[this.tmpGame.index].edit=false;\n        }\n\n        for (var key in item) {\n            this.tmpGame[key] = item[key];\n        }\n\n        this.games[item.index].edit=true;\n    }\n\n    //ADMIN OPTIONS\n    private acceptEditGame(){\n        this.updateGame();\n    }\n\n    private cancelEditGame(index){\n        this.games[index].edit=false;\n    }\n\n    addGame:Game = new Game(\"\", \"\", \"\", \"\", \"default.jpg\", \"\", \"\");\n    private acceptAddGame(item){\n        this.createGame();\n    }\n    private cancelAddGame(){\n        this.addGame = new Game(\"\", \"\", \"\", \"\", \"default.jpg\", \"\", \"\");\n    }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\n\n\nimport {GamesListComponent} from './games-list/games-list.component';\nimport {UserComponent} from './user/user.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    declarations: [GamesListComponent, UserComponent]\n})\nexport class GamesModule {\n}\n","module.exports = \"<div class=\\\"aside col-4 col-lg-3\\\">\\n    <form class=\\\"logForm panel\\\" *ngIf=\\\"showLogForm\\\" [formGroup] = \\\"logForm\\\" novalidate>\\n        <div class=\\\"well\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email *</label>\\n                <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"name@address.com\\\" required />\\n\\n                <div *ngIf=\\\"formErrors.email\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.email }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password *</label>\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required/>\\n\\n                <div *ngIf=\\\"formErrors.password\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.password }}\\n                </div>\\n            </div>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" [disabled]=\\\"!logForm.valid\\\" (click)=\\\"show(false,true,false,'log')\\\">\\n                Log in\\n            </button>\\n\\n        </div>\\n    </form>\\n\\n    <form class=\\\"updateForm panel\\\" *ngIf=\\\"showUpdateForm\\\" [formGroup] = \\\"updateForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n        <div class=\\\"well\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name *</label>\\n                <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" required />\\n\\n                <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.name }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email *</label>\\n                <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"name@address.com\\\" required />\\n\\n                <div *ngIf=\\\"formErrors.email\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.email }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password *</label>\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required/>\\n\\n                <div *ngIf=\\\"formErrors.password\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.password }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"phone\\\">Phone</label>\\n                <input id=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" placeholder=\\\"+38 (099) 999 99 99\\\"/>\\n\\n                <div *ngIf=\\\"formErrors.phone\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.phone }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"role\\\">Role *</label>\\n                <select id=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role\\\" (change)=\\\"checkAdmin()\\\" required >\\n                    <option *ngFor=\\\"let r of roles\\\" [value]=\\\"r\\\">{{r}}</option>\\n                </select>\\n\\n                <div *ngIf=\\\"formErrors.role\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.role }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"checkAdminCode\\\">\\n                <label for=\\\"code\\\">Code *</label>\\n                <input id=\\\"code\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"code\\\" required />\\n\\n                <div *ngIf=\\\"formErrors.code\\\" class=\\\"alert alert-danger\\\">\\n                    {{ formErrors.code }}\\n                </div>\\n            </div>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" [disabled]=\\\"!updateForm.valid\\\" (click)=\\\"show(false,true,false,'update')\\\">\\n                Accept\\n            </button>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"show(false,true,false,'cancel')\\\">\\n                Cancel\\n            </button>\\n        </div>\\n    </form>\\n\\n\\n    <div class=\\\"cart\\\" *ngIf=\\\"showCart\\\">\\n        <div class=\\\"login\\\">\\n            <h6 class=\\\"userName\\\">Hello, <span (click)=\\\"show(false,false,true,'updateForm')\\\">{{user.name}}</span></h6>\\n            <button class=\\\"btn btn-outline-info btn-sm\\\" (click)=\\\"show(true,false,false, 'logout')\\\">Log out</button>\\n        </div>\\n        <p>You can change your current account, click to your name</p>\\n\\n        <div class=\\\"list-group\\\">\\n            <li href=\\\"#\\\" class=\\\"list-group-item list-group-item-info\\\">\\n                Shopping cart\\n                <i class=\\\"material-icons\\\">shopping_cart</i>\\n            </li>\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let item of itemList\\\">\\n                {{item.title}}\\n                <input type=\\\"button\\\" value=\\\"✖\\\" (click)=\\\"deleteItem(item)\\\">\\n            </li>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"","module.exports = \".aside {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin-top: 15px;\\n  padding: 0 0 0 15px;\\n}\\n.aside .logForm,\\n.aside .updateForm,\\n.aside .cart {\\n  border-radius: 5px;\\n  padding: 5px;\\n  border: 1px solid #17a2b8 !important;\\n}\\n.aside .logForm input,\\n.aside .updateForm input,\\n.aside .cart input,\\n.aside .logForm select,\\n.aside .updateForm select,\\n.aside .cart select {\\n  box-shadow: none !important;\\n  border: 1px solid #17a2b8 !important;\\n}\\n.aside .logForm button,\\n.aside .updateForm button,\\n.aside .cart button {\\n  box-shadow: none !important;\\n  margin: 5px;\\n}\\n.aside .cart .login {\\n  margin-top: 10px;\\n}\\n.aside .cart .login:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.aside .cart .login .userName {\\n  margin-left: 5px;\\n  display: inline-table;\\n  float: left;\\n}\\n.aside .cart .login .userName span {\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n.aside .cart .login .userName span:hover {\\n  text-decoration: underline;\\n}\\n.aside .cart .login button {\\n  float: right;\\n  margin-top: -10px;\\n}\\n.aside .cart p {\\n  padding: 0 20px;\\n  text-align: center;\\n}\\n.aside .cart li i {\\n  font-size: 180%;\\n  float: right;\\n  margin-top: -5px;\\n}\\n.aside .cart li input {\\n  margin: 0;\\n  padding: 0;\\n  border: none !important;\\n  font-size: 20px;\\n  background: none;\\n  cursor: pointer;\\n  float: right;\\n  color: #666666;\\n  border: 1px solid #666666;\\n}\\n/*for error*/\\n.ng-valid[required],\\n.ng-valid.required {\\n  border-bottom: 3px solid mediumseagreen;\\n}\\n.ng-untouched[required] {\\n  border: 1px solid gainsboro;\\n  box-shadow: none !important;\\n}\\n.ng-invalid:not(form) {\\n  border-bottom: 3px solid red;\\n}\\ninput:focus {\\n  border: 1px solid grey;\\n}\\n.alert-danger {\\n  text-align: center;\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\nimport {User} from \"../../services/user\";\nimport {Game} from \"../../services/game\";\nimport {HttpUserService} from \"../../services/http.user.service\";\nimport {BroadcastService} from \"../../services/broadcast.service\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.less']\n})\nexport class UserComponent implements OnInit {\n    logForm: FormGroup;\n    updateForm: FormGroup;\n    errorMessage: string;\n\n    showLogForm:boolean = true;\n    showCart:boolean = false;\n    showUpdateForm:boolean = false;\n\n    show(log,cart,update, form){\n\n        switch (form) {\n            case \"logout\"://user log out and create user form\n                this.user = new User(\"\", \"\", \"\", \"\", \"\", \"\");\n                this.createUserForm();\n                this.sentUser();\n\n                this.showLogForm = log;\n                this.showCart = cart;\n                this.showUpdateForm = update;\n\n                this.itemList = [];\n                break;\n            case \"log\"://log in\n                this.addUser(this.logForm.value, log, cart, update);//add new user to base\n                break;\n            case \"updateForm\"://create update form\n                this.getUser(log, cart, update);\n                break;\n            case \"update\"://update current user\n                this.updateUser(this.updateForm.value, log, cart, update);\n            case \"cancel\"://cancel update\n                this.showLogForm = log;\n                this.showCart = cart;\n                this.showUpdateForm = update;\n                break;\n        }\n    }\n\n\n    user: User = new User(\"\",\"\",\"\",\"\",\"\",\"\");\n    token: number = 0;\n    code: string;\n\n    roles: string[] = [\"Guest\", \"Client\", \"Administrator\"];\n\n    @Output() userEvent = new EventEmitter();\n    sentUser(){\n        this.user.token = this.token;\n        this.userEvent.emit(this.user);\n    }\n\n    /*---------CART---------*/\n    constructor(private fb: FormBuilder, private service: HttpUserService, private broadcast:BroadcastService) {\n        this.broadcast.subscriber()\n            .subscribe(\n                res => {\n\n                    let item = {_id: res._id, title: res.title};\n                    let toString = JSON.stringify(this.itemList);\n                    if(toString.indexOf(res._id)==-1) this.itemList.push(item);\n                }\n            )\n    }\n\n    itemList: object[] = [];\n\n    private deleteItem(item){\n        console.log(this.itemList.indexOf(item));\n        this.itemList.splice(this.itemList.indexOf(item),1);\n    }\n\n\n\n    ngOnInit() {\n        this.createUserForm();\n        this.sentUser();\n    }\n\n\n    // Объект с ошибками, которые будут выведены в пользовательском интерфейсе\n    formErrors = {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"password\": \"\",\n        \"phone\": \"\",\n        \"role\": \"\",\n        \"code\":\"\"\n    };\n\n    // Объект с сообщениями ошибок\n    validationMessages = {\n        \"name\": {\n            \"required\": \"required field\",\n            \"minlength\": \"min length 3 symbols\",\n            \"maxlength\": \"max length 10 symbols\",\n            \"pattern\": \"unacceptable symbols\"\n        },\n        \"email\": {\n            \"required\": \"required field\",\n            \"pattern\": \"wrong format\"\n        },\n        \"password\": {\n            \"required\": \"required field\"\n        },\n        \"phone\":{\n            \"pattern\": \"wrong format\"\n        },\n        \"role\": {\n            \"required\": \"required field\"\n        },\n        \"code\": {\n            \"required\": \"required field\",\n            \"pattern\": \"wrong code\"\n        }\n    };\n\n\n    /*---------log form---------*/\n    createUserForm() {\n        this.logForm = this.fb.group({\n            \"email\": [this.user.email, [\n                Validators.required,\n                Validators.pattern(\"[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}\")\n            ]],\n            \"password\": [this.user.password, [\n                Validators.required\n            ]]\n        });\n\n        this.logForm.valueChanges\n            .subscribe(data => this.onValueChange(data));\n\n        this.onValueChange();\n    }\n\n    onValueChange(data ?: any) {\n        if (!this.logForm) return;\n        let form = this.logForm;\n\n        for (let field in this.formErrors) {\n            this.formErrors[field] = \"\";\n            // form.get - получение элемента управления\n            let control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                let message = this.validationMessages[field];\n                for (let key in control.errors) {\n                    this.formErrors[field] += message[key] + \" \";\n                }\n            }\n        }\n    }\n\n\n    /*---------update form---------*/\n    updateUserForm() {\n        this.updateForm = this.fb.group({\n            \"name\": [this.user.name, [\n                Validators.required,\n                Validators.minLength(3),\n                Validators.maxLength(10),\n                Validators.pattern(\"^[A-Za-z0-9\\_]+$\")\n            ]],\n            \"email\": [this.user.email, [\n                Validators.required,\n                Validators.pattern(\"[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}\")\n            ]],\n            \"password\": [this.user.password, [\n                Validators.required\n            ]],\n            \"phone\": [this.user.phone, [\n                Validators.pattern(\"^$|[+](\\\\d{2} )[(](\\\\d{3})[)]( \\\\d{3})( \\\\d{2}){2}\")\n            ]],\n            \"role\": [this.user.role, [\n                Validators.required\n            ]],\n            \"code\": [this.code, [Validators.pattern(\"^123$\")]]\n        });\n\n        this.updateForm.valueChanges\n            .subscribe(data => this.onValueChange2(data));\n\n        this.onValueChange2();\n    }\n\n\n    onValueChange2(data ?: any) {\n        if (!this.updateForm) return;\n        let form = this.updateForm;\n\n        for (let field in this.formErrors) {\n            this.formErrors[field] = \"\";\n            // form.get - получение элемента управления\n            let control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                let message = this.validationMessages[field];\n                for (let key in control.errors) {\n                    this.formErrors[field] += message[key] + \" \";\n                }\n            }\n        }\n    }\n\n\n    /*---------check admin---------*/\n    checkAdminCode: boolean = false;\n    checkAdmin(){\n        console.log(this.updateForm.valid);\n        console.log(this.updateForm.value.role);\n        if(this.updateForm.value.role == \"Administrator\"){\n            this.code = \"\";\n            this.updateCode();\n            this.checkAdminCode = true;\n        } else{\n            this.code = \"123\";\n            this.updateCode();\n            this.checkAdminCode = false;\n\n        }\n    }\n\n    updateCode() {\n        this.updateForm.patchValue({\"code\": this.code});\n    }\n\n\n    /*--------HTTP--------*/\n    //LOGIN OR CREATE NEW USER\n    public addUser(user, log,cart,update) {\n        console.log(this.token);\n        this.service.addUser(user)\n            .then(\n                response => {\n                    if(response.status == 422)this.formErrors.password = \"wrong password\"\n                    else {\n                        this.user = response;\n                        this.token = this.user.token;\n                        this.showLogForm = log;\n                        this.showCart = cart;\n                        this.showUpdateForm = update;\n                        this.sentUser();\n                    }\n\n                },\n                error => {\n                    this.errorMessage = error\n                }\n            );\n    }\n\n    //GET CURRENT USER DATA\n    public getUser(log,cart,update) {\n        console.log(this.token);\n        this.service.getUser(this.token)\n            .then(\n                response => {\n                    if(response.status == 401)this.formErrors.name = \"authorization expired\"\n                    else {\n                        this.user = response;\n                        this.updateUserForm();\n                        this.showLogForm = log;\n                        this.showCart = cart;\n                        this.showUpdateForm = update;\n                    }\n\n                },\n                error => {\n                    this.errorMessage = error\n                }\n            );\n    }\n\n    //EDIT CURRENT USER\n    public updateUser(user, log,cart,update) {\n        console.log(this.token);\n        this.service.updateUser(user, this.token)\n            .then(\n                response => {\n                    if(response.status == 401)this.formErrors.name = \"authorization expired\"\n                    else {\n                        this.user = response;\n                        this.showLogForm = log;\n                        this.showCart = cart;\n                        this.showUpdateForm = update;\n                        this.sentUser();\n                    }\n\n                },\n                error => {\n                    this.errorMessage = error\n                }\n            );\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <hr>\\n    <div class=\\\"news\\\">\\n        <div class=\\\"new\\\" *ngFor=\\\"let item of news\\\">\\n            <img src=\\\"../../assets/img/{{item.img}}\\\" alt=\\\"...\\\">\\n\\n            <div class=\\\"current_new\\\">\\n                <h5>{{item.title}}</h5>\\n                <span class=\\\"description\\\">{{item.description}}</span>\\n                <span class=\\\"date\\\"> - {{item.date}}</span>\\n                <p class=\\\"content\\\">{{item.content}}</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".news {\\n  margin-top: 20px;\\n}\\n.news .new {\\n  margin: 10px 0;\\n  padding: 15px 0;\\n  border-bottom: 2px solid #17a2b8;\\n}\\n.news .new:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.news .new img {\\n  float: left;\\n  width: 25%;\\n}\\n.news .new .current_new {\\n  padding-left: 1%;\\n  width: 70%;\\n  float: left;\\n}\\n.news .new .current_new h5,\\n.news .new .current_new .description {\\n  font-weight: bold;\\n  color: #666666;\\n}\\nhr {\\n  margin: 0;\\n  height: 10px;\\n  background-color: #17a2b8;\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {HttpService} from \"../services/http.service\";\nimport {News} from \"../services/news\";\n\n@Component({\n  selector: 'app-news',\n  templateUrl: 'news.component.html',\n  styleUrls: ['news.component.less']\n})\nexport class NewsComponent implements OnInit {\n\n    news: News[];\n    errorMessage: string;\n\n    constructor(private service: HttpService) {\n    }\n\n    ngOnInit() {\n        this.getNews();\n    }\n\n    private getNews() {\n        this.service.getNews().then(\n            news => {this.news = news},\n            error => this.errorMessage = error\n        )\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BroadcastService {\n\n    public result = {};\n    public searchEvent = new EventEmitter();\n\n    setResult(item) {\n        this.searchEvent.emit(item);\n    }\n\n    subscriber() {\n        return this.searchEvent;\n    }\n}\n","\r\nexport class Game{\r\n    public _id: number;\r\n    public title: string;\r\n    public description: string;\r\n    public price: number;\r\n    public img: string;\r\n    public edit: boolean;\r\n    public index: number;\r\n\r\n    constructor(id, title, description, price, img, edit, index) {\r\n        this._id = id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.price = price;\r\n        this.img = img;\r\n        this.edit = edit;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, Response } from \"@angular/http\";\n\nimport { Observable } from \"rxjs\";\nimport {News} from \"./news\";\nimport {Game} from \"./game\";\n\n\n@Injectable()\nexport class HttpService{\n\n    constructor(private http: Http){}\n\n    //HTTP REQUESTS (get, post, update, delete)\n    //get all the news\n    public getNews(): Promise<News[]>{\n        return this.http.get(\"news/all\")\n            .toPromise()\n            .then(this.extractNews)\n            // .catch(this.handleError);\n    }\n\n    private extractNews(response: Response){\n\n        let res = response.json();\n        let news: News[] = [];\n        for (let i = res.length-1; i > -1; i--) {\n            news.push(new News(res[i].id, res[i].title, res[i].description, res[i].date, res[i].content, res[i].img));\n        }\n        return news;\n    }\n\n    //http get any game\n    public getGames(search): Promise<Game[]>{\n        return this.http.get(`/games/search?title=${search}`)\n            .toPromise()\n            .then(this.extractGame)\n            .catch(this.handleError);\n    }\n\n    //http create new game\n    public createGame(item, token): Promise<Game[]>{\n        let myHeaders = new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        });\n\n        let options = new RequestOptions({ headers: myHeaders });\n        return this.http.post(`/games/create`, item, options)\n            .toPromise()\n            .then(this.extractGame)\n            .catch(this.handleError);\n    }\n\n    //http update game\n    public updateGame(item, token): Promise<Game[]>{\n        let myHeaders = new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        });\n\n        let options = new RequestOptions({ headers: myHeaders });\n        return this.http.put(`/games/update`, item, options)\n            .toPromise()\n            .then(this.extractGame)\n            .catch(this.handleError);\n    }\n\n    //http delete game\n    public deleteGame(id, token): Promise<Game[]>{\n        let myHeaders = new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        });\n\n        let options = new RequestOptions({ headers: myHeaders });\n        return this.http.delete(`/games/delete/${id}`, options)\n            .toPromise()\n            .then(this.extractGame)\n            .catch(this.handleError);\n    }\n\n    private extractGame(response: Response){\n        // console.log(response);\n        let res = response.json();\n        let games: Game[] = [];\n        for (let i = 0; i < res.length; i++) {\n            games.push(new Game(res[i]._id, res[i].title, res[i].description, res[i].price, res[i].img, false, i));\n\n        }\n        return games;\n    }\n\n    private handleError(reason: any): any {\n        console.log(reason);\n        let message;\n        if (reason instanceof Response) {\n            let errorData = reason.json().error || JSON.stringify(reason.json());\n            message = `${reason.status} - ${reason.statusText || ''} ${errorData}`\n        } else {\n            message = reason.message ? reason.message : reason.toString();\n        }\n\n        console.error(message);\n\n        return reason;\n    }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers, RequestOptions, Response } from \"@angular/http\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport {User} from \"./user\";\r\n\r\n\r\n@Injectable()\r\nexport class HttpUserService{\r\n\r\n    constructor(private http: Http){}\r\n\r\n    //LOGIN OR CREATE NEW USER\r\n    public addUser(user: User) {\r\n        return this.http.post(\"users\", user)\r\n            .toPromise()\r\n            .then(this.extractUser)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //GET CURRENT USER DATA\r\n    public getUser(token: number) {\r\n        let myHeaders = new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        });\r\n        console.log(token)\r\n        // создание опций для запроса\r\n        let options = new RequestOptions({ headers: myHeaders });\r\n        return this.http.get(\"user\", options)\r\n            .toPromise()\r\n            .then(this.extractUser)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //EDIT CURRENT USER\r\n    public updateUser(user: User, token: number) {\r\n        let myHeaders = new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        });\r\n        // создание опций для запроса\r\n        let options = new RequestOptions({ headers: myHeaders });\r\n        return this.http.patch(\"users\", user, options)\r\n            .toPromise()\r\n            .then(this.extractUser)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //COMMON FOR ALL OF REQUESTS\r\n    private extractUser(response: Response) {\r\n        return response.json();\r\n    }\r\n\r\n    private handleError(reason: any): any {\r\n        console.log(\"*****error****\");\r\n        console.log(reason);\r\n        let message;\r\n        if (reason instanceof Response) {\r\n            let errorData = reason.json().error || JSON.stringify(reason.json());\r\n            message = `${reason.status} - ${reason.statusText || ''} ${errorData}`\r\n        } else {\r\n            message = reason.message ? reason.message : reason.toString();\r\n        }\r\n\r\n        console.error(message);\r\n\r\n        return reason;\r\n    }\r\n}\r\n","export class News {\r\n    public _id: number;\r\n    public title: string;\r\n    public description: string;\r\n    public date: string;\r\n    public content: string;\r\n    public img: string;\r\n\r\n    constructor(id, title, description, date, content, img) {\r\n        this._id = id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.date = date;\r\n        this.content = content;\r\n        this.img = img;\r\n    }\r\n}","export class User {\r\n    public name: string;\r\n    public email: string;\r\n    public password: string;\r\n    public phone: string;\r\n    public role: string;\r\n    public token: number;\r\n\r\n    constructor(name, email, password, phone, role, token) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.password = password;\r\n        this.phone = phone;\r\n        this.role = role;\r\n        this.token = token;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}